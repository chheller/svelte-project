{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/Giphy.svelte",
    "../src/Gif.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import Gif from \"./Gif.svelte\";\n  import { gifState } from \"./state.js\";\n\n  const api_key = location.search.replace(\"?api_key=\", \"\") || \"\";\n  const API_URL = `https://api.giphy.com/v1/gifs/search?api_key=${api_key}`;\n\n  let searchTerm = \"\";\n  let isPlayingAll = false;\n  let gifs = [];\n\n  const limit = limit => `&limit=${limit}`;\n\n  const searchGif = async () => {\n    const response = await fetch(`${API_URL}${limit(15)}&q=${searchTerm}`);\n    const json = await response.json();\n    gifs = mapResponseToGif(json.data);\n  };\n\n  const mapResponseToGif = responseData =>\n    responseData.map(data => ({\n      title: data.title,\n      state: gifState.PAUSED,\n      srcMotion: data.images.fixed_height.url,\n      srcStill: data.images.fixed_height_still.url\n    }));\n\n  const playAll = () => {\n    if (!isPlayingAll) isPlayingAll = true;\n  };\n\n  const pauseAll = () => {\n    if (isPlayingAll) isPlayingAll = false;\n  };\n</script>\n\n<style>\n  .form-wrapper {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  .gifs-container {\n    display: flex;\n    flex-wrap: wrap;\n    margin: auto;\n    padding: 30px 30px;\n  }\n  .controls {\n    padding: 5px 5px 5px 5px;\n  }\n</style>\n\n<div>\n  <div class=\"form-wrapper\">\n    <div>\n      <input placeholder=\"Search for a gif\" bind:value={searchTerm} />\n      <input type=\"submit\" on:click={searchGif} />\n    </div>\n    <div class=\"controls\">\n      <button on:click={playAll}>Play All</button>\n      <button on:click={pauseAll}>Pause All</button>\n    </div>\n  </div>\n  <div class=\"gifs-container\">\n    {#each gifs as gif, index}\n      <Gif\n        {gif}\n        state={(isPlayingAll && gifState.PLAYING) || gif.state}\n        disableHoverState={isPlayingAll}\n        data-image-id={index} />\n    {/each}\n  </div>\n</div>\n",
    "<script>\n  import { gifState } from \"./state.js\";\n  export let gif;\n  export let disableHoverState;\n  export let state = gifState.STILL;\n\n  const handleMouseEnter = () => {\n    if (!disableHoverState && state === gifState.PAUSED)\n      state = gifState.PLAYING;\n  };\n\n  const handleMouseLeave = () => {\n    if (!disableHoverState && state === gifState.PLAYING)\n      state = gifState.PAUSED;\n  };\n</script>\n\n<style>\n  .container {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 250px;\n    height: 250px;\n    padding: 5px 5px 5px 5pxw;\n    margin: auto;\n  }\n  .gif {\n    position: relative;\n    max-height: 100%;\n    max-width: 100%;\n    margin: auto;\n  }\n</style>\n\n<div class=\"container\">\n  <img\n    class=\"gif\"\n    src={state === gifState.PAUSED ? gif.srcStill : gif.srcMotion}\n    alt={gif.title}\n    on:mouseenter={handleMouseEnter}\n    on:mouseleave={handleMouseLeave} />\n</div>\n"
  ],
  "names": [],
  "mappings": "AAqCE,aAAa,cAAC,CAAC,AACb,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,AACrB,CAAC,AACD,eAAe,cAAC,CAAC,AACf,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CAAC,IAAI,AACpB,CAAC,AACD,SAAS,cAAC,CAAC,AACT,OAAO,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,AAC1B,CAAC;AChCD,UAAU,eAAC,CAAC,AACV,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,MAAM,CACvB,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,CACb,OAAO,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CACzB,MAAM,CAAE,IAAI,AACd,CAAC,AACD,IAAI,eAAC,CAAC,AACJ,QAAQ,CAAE,QAAQ,CAClB,UAAU,CAAE,IAAI,CAChB,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,IAAI,AACd,CAAC"
}